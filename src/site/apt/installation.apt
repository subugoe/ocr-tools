Installation

* Kompilieren

+---------------
mvn clean package
+---------------
  
  im Hauptordner <<<ocr-tools>>>.
 
* Benutzen

  Module, die für den Endnutzer gedacht sind:
  
    * CLI-Schnittstelle (Kommandozeilentool)
    
    * SOAP Web Service
    
    * Goobi OCR Servlet
    
    * Web Frontend
    
  Das CLI-Tool kann direkt mit 
  
+---------------------------+
java -jar cli.jar <options>
+---------------------------+

  ausgeführt werden (siehe Dokumentation im Modul für Details).
  
  Beim Web Service, beim Servlet und beim Web Frontend entstehen WAR-Dateien, die in einen Webcontainer wie z.B. Tomcat deployt 
  werden müssen. Für Details siehe Dokumentation in den entsprechenden Modulen.
  
  
* Anmerkungen zum Abbyy Single-User-Betrieb

  Beim Starten einer OCR-Anwendung wird eine Lock-Datei angelegt, die die laufende Anwendung schützt,
  indem weitere Starts verhindert werden. Die Datei enthält die IP und die Prozess-ID der laufenden
  Anwendung. Die Infos können dazu verwendet werden, eine zu lange laufende oder abgestürzte 
  Anwendung zu finden und zu stoppen. Die URL zu der Datei wird in der Exception ausgegeben, die
  beim Versuch geworfen wird, eine zweite Anwendung zu starten.
  
* Anmerkungen zum Abbyy Multi-User-Betrieb

  Der parallele Zugriff auf die vom Abbyy Server überwachten Ordner wird mit Hilfe von 
  {{{http://www.hazelcast.com}Hazelcast}} synchronisiert.
  Genau wie beim Single-User-Betrieb wird hier zunächst eine Lock-Datei angelegt. Wenn weitere Anwendungen
  gestartet werden und sich zum selben Hazelcast-Cluster anbinden, wird die Lock-Datei ignoriert. Sobald alle
  Prozesse im Cluster durchgelaufen sind, wird das Cluster aufgelöst und die Lock-Datei wieder gelöscht.
  
  Damit sich weitere Anwendungen an das bestehende Cluster anschließen können, muss Hazelcast richtig konfiguriert 
  sein. 
  
  Die Konfigurationsdatei heißt <<<hazelcast.xml>>> und befindet sich im <<<resources>>>-Ordner des 
  Abbyy-Implementierungs-Moduls. Beispiel-Ausschnitt:
  
+----+
	<tcp-ip enabled="true">
		<interface>123.45.67.89</interface>
		<interface>123.45.67.100</interface>
		<!-- add more ip addresses here to participate in this cluster -->
				
		<!--hostname>myhost</hostname-->
		<!-- add more host names here to participate in this cluster -->
				
	</tcp-ip>
+-----+

  Hier müssen alle IP-Adressen und/oder Host-Namen eingetragen werden, die am Cluster teilnehmen sollen.
  Anwendungen, die auf diesen Rechnern gestartet werden, finden sich dann automatisch und verbinden sich zu 
  einem Cluster. Dazu muss zumindest der Port 5801 auf jedem Rechner offen sein. Falls auf einem Rechner 
  mehr als eine Anwendung laufen soll, müssen hier noch weitere Ports geöffnet werden (5802, 5803, usw. und
  UDP-Port 54327)

* Anmerkungen zum Tesseract-Betrieb

  Auf dem Rechner muss Tesseract V3 installiert und von der Kommandozeile ausführbar sein. 
  
  Falls andere Sprachen außer Englisch verwendet werden sollen, müssen diese für Tesseract installiert sein
  (z. B. deu, deu-frak)
  
  
  
    
    
    
 
      
