Installation

* Auswahl einer OCR-Implementierung

  Ein bestimmtes Frontend kann mit einer OCR-Implementierung bereits beim Kompilieren verdrahtet werden.
  Dafür dienen die Maven-Profile
  
    * <<<abbyy>>>: Ist aktiviert by default, wenn nichts Anderes angegeben wird. Wählt die Abbyy-Implementierung 
    aus, die kein paralleles Benutzen des Abbyy Servers erlaubt. D. h. wenn beispielsweise eine 
    Kommandozeilenanwendung (CLI)
    gestartet ist und den Server benutzt, wird der Zugriff von einer anderen Anwendung oder von einem Web Service 
    verweigert.
    
    * <<<abbyy-multiuser>>>: Wählt die Abbyy-Implementierung, erlaubt aber gleichzeitiges Zugreifen auf den Abbyy-Server
    von beliebig vielen CLI-Anwendungen und anderen Frontends. So ist z. B. eine dauerhafte OCR-Verarbeitung 
    und gleichzeitig eine just-in-time Benutzung von einzelnen Bildern durch den Web Service möglich.
  
    * <<<tesseract>>>: Wählt die Tesseract-Implementierung aus.
  
  Das Profil kann entweder auf das ganze Projekt, oder auf ein bestimmtes Frontend-Modul (CLI, Web Service, Goobi Servlet)
  angewendet werden. Beispiel:
  
+----------------------------+
mvn package -Pabbyy-multiuser
+----------------------------+

  Um im Nachhinein die Zuordnung zu ändern, muss eine XML-Konfigurationsdatei editiert werden.
  
    * <<<context.xml>>> in der JAR-Datei des CLI-Moduls
    
    * <<<WEB-INF/classes/context.xml>>> in der WAR-Datei des Goobi-Servlet-Moduls
    
    * <<<WEB-INF/classes/contentWebService.xml>>> in der WAR-Datei des Web Sevice-Moduls
  
  Der relevante Ausschnitt sieht z.B. so aus: 
  
+----------------+
 	<bean id="abbyyServerOCREngine" name="abbyyServerOCREngine"
		class="de.uni_goettingen.sub.commons.ocr.abbyy.server.AbbyyServerOCREngine"
		factory-method="getInstance">
	</bean>
+----------------+
 
   Hier muss das <<<class>>>-Attribut entsprechend geändert werden:
   
     * "<<<de.uni_goettingen.sub.commons.ocr.abbyy.server.AbbyyServerOCREngine>>>" für die Single-User-Implementierung 
       für Abbyy (entspricht dem Profil <<<abbyy>>>).
       
     * "<<<de.uni_goettingen.sub.commons.ocr.abbyy.server.multiuser.MultiUserAbbyyOCREngine>>>"
       für die Multi-User-Implementierung (entspricht dem Profil <<<abbyy-multiuser>>>).
       
     * "<<<de.uni_goettingen.sub.commons.ocr.tesseract.TesseractOCREngine>>>" für die Tesseract-Implementierung 
       (entspricht dem Profil <<<tesseract>>>).
 
* Benutzen

  Module, die für den Endnutzer gedacht sind:
  
    * CLI-Schnittstelle (Kommandozeilentool)
    
    * SOAP Web Service
    
    * Goobi OCR Servlet
    
  Das CLI-Tool kann direkt mit 
  
+---------------------------+
java -jar cli.jar <options>
+---------------------------+

  ausgeführt werden (siehe Dokumentation im Modul für Details).
  
  Beim Web Service und beim Servlet entstehen WAR-Dateien, die in einen Webcontainer wie z.B. Tomcat deployt 
  werden müssen. Für Details siehe Dokumentation in den entsprechenden Modulen.
  
  
* Anmerkungen zum Abbyy Single-User-Betrieb

  Beim Starten einer OCR-Anwendung wird eine Lock-Datei angelegt, die die laufende Anwendung schützt,
  indem weitere Starts verhindert werden. Die Datei enthält die IP und die Prozess-ID der laufenden
  Anwendung. Die Infos können dazu verwendet werden, eine zu lange laufende oder abgestürzte 
  Anwendung zu finden und zu stoppen. Die URL zu der Datei wird in der Exception ausgegeben, die
  beim Versuch geworfen wird, eine zweite Anwendung zu starten.
  
* Anmerkungen zum Abbyy Multi-User-Betrieb

  Der parallele Zugriff auf die vom Abbyy Server überwachten Ordner wird mit Hilfe von 
  {{{http://www.hazelcast.com}Hazelcast}} synchronisiert.
  Genau wie beim Single-User-Betrieb wird hier zunächst eine Lock-Datei angelegt. Wenn weitere Anwendungen
  gestartet werden und sich zum selben Hazelcast-Cluster anbinden, wird die Lock-Datei ignoriert. Sobald alle
  Prozesse im Cluster durchgelaufen sind, wird das Cluster zerstört und die Lock-Datei wieder gelöscht.
  
  Damit sich weitere Anwendungen an das bestehende Cluster anschließen können, muss Hazelcast richtig konfiguriert 
  sein. 
  
  Die Konfigurationsdatei heißt <<<hazelcast.xml>>> und befindet sich im <<<resources>>>-Ordner des 
  Abbyy-Implementierungs-Moduls. Beispiel-Ausschnitt:
  
+----+
	<tcp-ip enabled="true">
		<interface>123.45.67.89</interface>
		<interface>123.45.67.100</interface>
		<!-- add more ip addresses here to participate in this cluster -->
				
		<!--hostname>myhost</hostname-->
		<!-- add more host names here to participate in this cluster -->
				
	</tcp-ip>
+-----+

  Hier müssen alle IP-Adressen und/oder Host-Namen eingetragen werden, die am Cluster teilnehmen sollen.
  Anwendungen, die auf diesen Rechnern gestartet werden, finden sich dann automatisch und verbinden sich zu 
  einem Cluster. Dazu muss zumindest der Port 5801 auf jedem Rechner offen sein. Falls auf einem Rechner 
  mehr als eine Anwendung laufen soll, müssen hier noch weitere Ports geöffnet werden (5802, 5803, usw.)

* Anmerkungen zum Tesseract-Betrieb

  Auf dem Rechner muss Tesseract V3 installiert und von der Kommandozeile ausführbar sein. 
  
  Falls andere Sprachen außer Englisch verwendet werden sollen, müssen diese für Tesseract installiert sein
  (z. B. deu, deu-frak)
  
  
  
    
    
    
 
      
